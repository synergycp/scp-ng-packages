!function(){"use strict";angular.module("scp.packages",["scp.core.auth","scp.router","ct.ui.router.extras.future"])}(),function(){"use strict";function e(e,t,a){function r(){return u=u||c.getList().then(n)}function n(e){return t.load(_(e).map("files").flatten().value())}var u,o=this,c=e.all(a.getApiBase());o.load=r}e.$inject=["Api","$ocLazyLoad","PackagesLoader"],angular.module("scp.packages").service("PackageLoader",e)}(),function(){"use strict";function e(){function e(e){return r=e,n}function t(){return r}function a(){function e(){var e=n.getApiBase();if(!e)throw new Error("ApiBase not set in PackagesLoaderProvider");return e}return{getApiBase:e}}var r,n={$get:a,getApiBase:t,setApiBase:e};return n}angular.module("scp.packages").provider("PackagesLoader",e)}(),function(){function e(e,t,a){function r(e){return e.load()}function n(e,t){return t.load().then(function(){})}r.$inject=["PackageLoader"],n.$inject=["futureState","PackageLoader"];var u=a;t.state("app.pkg",{url:"/pkg",abstract:!0,template:u.dummyTemplate}),e.addResolve(r)}e.$inject=["$futureStateProvider","$stateProvider","RouteHelpersProvider"],angular.module("scp.packages").config(e)}(),function(){"use strict";function e(e){e.resolve(t)}function t(e){return e.load()}e.$inject=["SsoUrlProvider"],t.$inject=["PackageLoader"],angular.module("scp.packages").config(e)}();